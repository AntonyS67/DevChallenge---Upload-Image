[{"D:\\Curso React - Udemy\\image-uploader-master\\src\\index.js":"1","D:\\Curso React - Udemy\\image-uploader-master\\src\\App.js":"2","D:\\Curso React - Udemy\\image-uploader-master\\src\\reportWebVitals.js":"3","D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\UploadImage.js":"4","D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Upload.js":"5","D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Uploading.js":"6","D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Uploaded.js":"7","D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\Loading.js":"8","D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\Uploaded.js":"9"},{"size":478,"mtime":1606927589139,"results":"10","hashOfConfig":"11"},{"size":642,"mtime":1607036382184,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606492434841,"results":"13","hashOfConfig":"11"},{"size":1330,"mtime":1606942623373,"results":"14","hashOfConfig":"11"},{"size":3168,"mtime":1607050777069,"results":"15","hashOfConfig":"11"},{"size":985,"mtime":1607046503403,"results":"16","hashOfConfig":"11"},{"size":1458,"mtime":1607046987620,"results":"17","hashOfConfig":"11"},{"size":1128,"mtime":1607036093643,"results":"18","hashOfConfig":"11"},{"size":1931,"mtime":1607047007022,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"soy3qr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Curso React - Udemy\\image-uploader-master\\src\\index.js",[],["40","41"],"D:\\Curso React - Udemy\\image-uploader-master\\src\\App.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\reportWebVitals.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\UploadImage.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Upload.js",["42","43"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Container, FileInput, Form, InputDiv } from '../ui/UploadImage';\r\n\r\n\r\nfunction Upload({setUploadPercentage,setUrl,setTime}) {\r\n    const [dragging,setDragging] = useState(false);\r\n    const [dragCounter,setDragCounter] = useState(0);\r\n    const dropRef = React.createRef();\r\n    const url = \"https://api.cloudinary.com/v1_1/dpb53nq0u/image/upload\";\r\n\r\n    useEffect(() => {   \r\n        let div = dropRef.current;\r\n        div.addEventListener('dragenter', handleDragIn)\r\n        div.addEventListener('dragleave', handleDragOut)\r\n        div.addEventListener('dragover', handleDrag)\r\n        div.addEventListener('drop', handleDrop)\r\n    },[]);\r\n\r\n    const handleDrag = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n    const handleDragIn = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragCounter(dragCounter+1);\r\n        if(e.dataTransfer.items && e.dataTransfer.items.length > 0){\r\n            setDragging(true);\r\n        }\r\n    }\r\n    const handleDragOut = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragCounter(dragCounter-1);\r\n        if(dragCounter > 0 ) return;\r\n        setDragging(false);\r\n    }\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragging(false);\r\n        if(e.dataTransfer.files && e.dataTransfer.files.length > 0){\r\n            console.log(e.dataTransfer.files);\r\n            uploadImage(e.dataTransfer.files);\r\n            e.dataTransfer.clearData();\r\n            setDragCounter(0);\r\n        }\r\n    }\r\n\r\n    \r\n    const uploadImage = async files => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\",files[0]);\r\n        formData.append(\"upload_preset\",\"ml_default\");\r\n        try {\r\n            const res = await axios.post(url,formData,{\r\n                onUploadProgress:progressEvent => {\r\n                    setUploadPercentage(parseInt(Math.round((progressEvent.loaded*100)/progressEvent.total)));\r\n                    setTime(parseInt(progressEvent.total));\r\n                    setTimeout(() => {\r\n                        setUploadPercentage(0);\r\n                    }, 10000);\r\n                }\r\n            });\r\n            console.log(res);\r\n            setUrl(res.data.url);\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n    return (\r\n        <Container>\r\n            <Form enctype=\"multipart/form-data\" method=\"POST\">\r\n                <h2>Upload your image</h2>\r\n                <p>File should be Jpeg, Png...</p>\r\n                <InputDiv ref={dropRef}>\r\n                    <img src=\"./images/image.jpg\" alt=\"file drag\"/>\r\n                    <p>Drag and Drop your image here</p>\r\n                </InputDiv>\r\n                <p>Or</p>\r\n                <FileInput>\r\n                    <input type=\"file\" name=\"file\" id=\"file\" onChange={e => uploadImage(e.target.files)}/>\r\n                    Choose a File\r\n                </FileInput>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n","D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Uploading.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\Components\\Uploaded.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\Loading.js",[],"D:\\Curso React - Udemy\\image-uploader-master\\src\\ui\\Uploaded.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":12,"nodeType":"50","messageId":"51","endLine":7,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":18,"column":7,"nodeType":"54","endLine":18,"endColumn":9,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'dragging' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dropRef', 'handleDragIn', 'handleDragOut', and 'handleDrop'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [dropRef, handleDragIn, handleDragOut, handleDrop]",{"range":"61","text":"62"},[728,730],"[dropRef, handleDragIn, handleDragOut, handleDrop]"]